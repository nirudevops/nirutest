version: 0.2

phases:
  install:
    runtime-versions:
      python: "3.8"
    commands:
      # Ensure Terraform is installed in the build environment
      - curl -o terraform.zip https://releases.hashicorp.com/terraform/1.11.4/terraform_1.11.4_linux_amd64.zip
      - unzip terraform.zip
      - mv terraform /usr/local/bin/
      - curl -L -o opa https://openpolicyagent.org/downloads/v1.3.0/opa_linux_amd64_static
      - mv opa /usr/local/bin/
      - chmod 755 /usr/local/bin/opa
    finally:
      - terraform --version
      - opa version
  build:
    commands:
      - mkdir -p build_output
      - terraform init
      - terraform plan -out=tfplan
      - terraform show -no-color -json tfplan > build_output/output.json
      - opa eval -d policies/main.rego -i build_output/output.json -f json "data.example.deny_untagged_instances"
      - |
        # Evaluate the policy and capture the result
        result=$(opa eval -d policies/main.rego -i build_output/output.json -f json "data.example.deny_untagged_instances")
        echo $result
        # Parse the result to check for policy violations
        if echo "$result" | grep -q '"value": {}'; then
          echo "No policy violations detected."
        else
          echo "Policy violation detected: EC2 instances without tags."
          exit 1  # Fail the build
          fi
artifacts:
  files:
    - output.json
  discard-paths: yes
  base-directory: build_output